basePath: /
host: localhost:5000
info:
  title: 'Comapany Api:'
  version: 0.0.1
paths:
  /flush:
    delete:
      description: Delete record of given key
      operationId: key
      parameters:
      - description: The key of the record for which the operation relates
        in: path
        name: string
        required: true
        type: string
        x-go-name: KEY
      responses:
        "200":
          $ref: '#/responses/commonResponse'
        "500":
          $ref: '#/responses/commonResponse'
  /v1/:
    delete:
      description: Delete record of given key
      operationId: key
      parameters:
      - description: The key of the record for which the operation relates
        in: path
        name: string
        required: true
        type: string
        x-go-name: KEY
      responses:
        "200":
          $ref: '#/responses/commonResponse'
        "500":
          $ref: '#/responses/commonResponse'
    get:
      description: Delete record of given key
      operationId: key
      parameters:
      - description: The key of the record for which the operation relates
        in: path
        name: string
        required: true
        type: string
        x-go-name: KEY
      responses:
        "200":
          $ref: '#/responses/commonResponse'
        "500":
          $ref: '#/responses/commonResponse'
    put:
      consumes:
      - text/plain
      description: Add record of given key
      operationId: value
      parameters:
      - description: The key of the record for which the operation relates
        in: path
        name: VALUE
        required: true
        schema:
          type: string
      - description: The key of the record for which the operation relates
        in: body
        name: VALUE
        required: true
        schema:
          type: string
      responses:
        "201":
          $ref: '#/responses/commonResponse'
        "404":
          $ref: '#/responses/commonResponse'
produces:
- application/json
responses:
  commonResponse:
    description: ""
    schema:
      properties:
        Message:
          description: The response message
          example: Given key not found
          type: string
      required:
      - Message
      type: object
  noContentResponse:
    description: ""
schemes:
- http
- https
securityDefinitions:
  apiKey:
    in: header
    name: authorization
    type: apiKey
swagger: "2.0"
